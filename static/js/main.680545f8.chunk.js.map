{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-actions.js","components/Filter/Filter.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","title","children","className","s","container","getContacts","state","phonebook","contacts","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","Filter","value","useSelector","dispatch","useDispatch","label","type","onChange","event","target","placeholder","input","axios","defaults","baseURL","ContactForm","useState","setName","number","setNumber","handleChange","e","resetForm","onSubmit","preventDefault","find","contact","isNameExist","isNumberExist","trim","isQueryEmpty","post","then","data","catch","error","addContact","toast","warning","form","button","propTyper","PropTypes","func","isRequired","ContactList","useEffect","a","get","length","list","map","id","item","onClick","contactId","delete","App","autoClose","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","logger","store","configureStore","reducer","phonebookReducer","devTools","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.680545f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__26ut-\",\"item\":\"ContactList_item__aMoL2\",\"button\":\"ContactList_button__bzAdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__-yub7\",\"input\":\"Filter_input__3YOa5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__fVxwk\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.phonebook.contacts;\nexport const getFilter = state => state.phonebook.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// export const getVisibleContacts = state => {\n//   const allContacts = getContacts(state);\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return allContacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'phonebook/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'phonebook/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('phonebook/fetchContactsError');\n\nexport const addContactRequest = createAction('phonebook/addContactRequest');\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\nexport const addContactError = createAction('phonebook/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'phonebook/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'phonebook/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('phonebook/deleteContactError');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      Find contact by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={event => dispatch(changeFilter(event.target.value))}\n        placeholder=\"Enter name for search\"\n        className={s.input}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040/';\n\n// export const fetchContacts = () => dispatch => {\n//   dispatch(fetchContactsRequest());\n//   axios\n//     .get('/contacts')\n//     .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n//     .catch(error => dispatch(fetchContactsError(error)));\n// };\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = { name, number };\n\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/phonebook/phonebook-operations';\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const isNameExist = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n  const isNumberExist = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const isQueryEmpty = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isNameExist(name)) {\n      toast.warning('This name is already exist');\n    } else if (isNumberExist(number)) {\n      toast.warning('This number is already exist');\n    } else if (isQueryEmpty(name, number)) {\n      toast.error('Some fields are empty');\n    } else {\n      dispatch(addContact(name, number));\n    }\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTyper = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  deleteContact,\n  fetchContacts,\n} from '../../redux/phonebook/phonebook-operations';\nimport { getVisibleContacts } from '../../redux/phonebook/phonebook-selectors';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    //eslint-disable-next-line\n  }, []);\n\n  //const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <>\n      {contacts.length === 0 && <p> No contacts </p>}\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li className={s.item} key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button\n              type=\"button\"\n              className={s.button}\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\n\nfunction App() {\n  return (\n    <div>\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </Container>\n      <Container title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Container>\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactSuccess,\n  addContactRequest,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n} from './phonebook-actions';\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport phonebookReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    phonebook: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3qzQ-\",\"label\":\"ContactForm_label__qIqeh\",\"input\":\"ContactForm_input__2_x_o\",\"button\":\"ContactForm_button__Hcy4H\"};"],"sourceRoot":""}